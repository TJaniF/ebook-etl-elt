WEATHER_API_URL="https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&hourly=temperature_2m,relative_humidity_2m,precipitation_probability"

AIRFLOW_CONN_MINIO_LOCAL='{
    "conn_type":"aws",
    "extra":{
        "aws_access_key_id":"minioadmin",
        "aws_secret_access_key":"minioadmin",
        "endpoint_url":"http://host.docker.internal:9000"
    }
}'

AIRFLOW_CONN_POSTGRES_DEFAULT='{
    "conn_type":"postgres",
    "login":"postgres",
    "password":"postgres",
    "host":"host.docker.internal",
    "port":5433,
    "schema":"postgres"
}'

# Object Storage Custom XCom Backend

# Use existing MinIO container and connection
# AIRFLOW__CORE__XCOM_BACKEND="airflow.providers.common.io.xcom.backend.XComObjectStorageBackend"
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_PATH="s3://minio_local@open-meteo-etl/xcom"
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_THRESHOLD="100"
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_COMPRESSION="zip"


# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_THRESHOLD="10"
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_COMPRESSION="zip"

# S3
# AIRFLOW__CORE__XCOM_BACKEND="airflow.providers.common.io.xcom.backend.XComObjectStorageBackend"
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_PATH="s3://my_aws_conn@<my-bucket>/xcom"

# GCS
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_PATH="gs://my_gcp_conn@<my-bucket>/xcom"

# Azure Blob Storage
# AIRFLOW__COMMON_IO__XCOM_OBJECTSTORAGE_PATH="abfs://my_azure_conn@<my-blob>/xcom"